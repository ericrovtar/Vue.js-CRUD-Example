@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
@import url("https://fonts.googleapis.com/css?family=Roboto:400,700");
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/*------------------------------------*\
#BOX-SIZING
\*------------------------------------*/
/**
* Set the global `box-sizing` state to `border-box`.
*
* css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
* paulirish.com/2012/box-sizing-border-box-ftw
*/
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Typecsset
 *
 * Typecsset is a small, unopinionated library for creating beautifully set type
 * on the web. Typecsset gives perfect vertical rhythm at any configurable font
 * size, as well as many other typographical niceties.
 */
/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * A lot of elements in Typecsset need to share some declarations (mainly for
 * vertical rhythm), so we `@extend` some silent classes.
 */
h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin: 0;
  padding: 0; }

h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * 1. Set the base element’s `font-size` to the value of your choosing. Set in
 *    ems, assuming a browser default of 16px.
 * 2. Work out the unitless `line-height` for your project based around your
 *    desired `line-height` (defined previously in pixels), and your project’s
 *    base font size.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [2] */ }

body {
  margin: 0; }

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
h1 {
  font-size: 48px;
  font-size: 3rem;
  line-height: 1; }

h2 {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333; }

h3 {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6; }

h4 {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

h5 {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2; }

h6 {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333; }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem; }

li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * Not strictly a paragraph, but probably doesn’t need its own section.
 */
/*------------------------------------*\
    #CODE
\*------------------------------------*/
/**
 * 1. Fix an odd quirk whereby, without this, code blocks are rendered at a
 *    font-size smaller than 1em.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* [1] */ }

/*------------------------------------*\
    #QUOTES
\*------------------------------------*/
/**
 * 1. Hang the opening quote of the blockquote.
 */
blockquote {
  text-indent: -0.41em;
  /* [1] */ }

/**
 * Set up quote marks on quoting elements. This is very English-based, so we are
 * using “, ”, ‘, and ’ quotes.
 */
blockquote {
  quotes: "“" "”";
  margin-left: 48px;
  margin-left: 3rem; }
  blockquote p:before {
    content: "“";
    content: open-quote; }
  blockquote p:after {
    content: "";
    content: no-close-quote; }
  blockquote p:last-of-type:after {
    content: "”";
    content: close-quote; }

q {
  quotes: "‘" "’" "“" "”";
  /**
   * If an element opens with an inline quote, let’s hang that.
   */ }
  q:before {
    content: "‘";
    content: open-quote; }
  q:after {
    content: "’";
    content: close-quote; }
  q q:before {
    content: "“";
    content: open-quote; }
  q q:after {
    content: "”";
    content: close-quote; }
  q:first-child {
    display: inline-block;
    text-indent: -0.22em; }

/*------------------------------------*\
    #TABLES
\*------------------------------------*/
/**
 * Crude table styles; tables are very difficult to keep on the baseline.
 */
table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0; }

th,
td {
  padding: 12px; }

/*------------------------------------*\
Taken from CSS Wizardry Grids
csswizardry.com
\*------------------------------------*/
/**
* Define your breakpoints. The first value is the prefix that shall be used for
* your classes (e.g. `.palm--one-half`), the second value is the media query
* that the breakpoint fires at.
*/
/**
* These mixins are for the library to use only, you should not need to modify
* them at all.
*
* Enclose a block of code with a media query as named in `$breakpoints`.
*/
.background-cover {
  background-position: top center;
  background-repeat: no-repeat;
  background-size: cover; }

.static-image {
  position: absolute;
  top: 0;
  z-index: -1; }

.object-cover {
  object-fit: cover;
  object-position: top center;
  height: 100%;
  width: 100%; }

.content-wrapper {
  padding: 4rem;
  width: 100%; }
  @media only screen and (max-width: 480px) {
    .content-wrapper {
      padding: 3rem 10px;
      max-width: 100vw;
      overflow-x: hidden; } }
  .content-wrapper.lock-width, .content-wrapper .lock-width {
    max-width: 60rem; }

.add-padding {
  padding: 1rem 20px; }

.add-right-margin {
  margin-right: 20px !important; }
  .add-right-margin--double {
    margin-right: 40px !important; }

.add-bottom-margin {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

.no-bottom-margin {
  margin-bottom: 0; }

.center-by-margin {
  margin-left: auto !important;
  margin-right: auto !important; }

.fill-screen-height {
  min-height: 100vh; }

.full-height {
  height: 100%; }

.half-height {
  height: 50%; }

.one-whole {
  width: 100%; }

.nine-tenths {
  width: 90%; }

.two-thirds {
  width: 66%; }

.one-half {
  width: 50%; }

.one-third {
  width: 33%; }

.one-quarter {
  width: 25%; }

@media only screen and (max-width: 1023px) {
  .portable--one-whole {
    width: 100%; }
  .portable-nine-tenths {
    width: 90%; }
  .portable--two-thirds {
    width: 66%; }
  .portable--one-half {
    width: 50%; }
  .portable--one-third {
    width: 33%; }
  .portable--one-quarter {
    width: 25%; } }
@media only screen and (max-width: 480px) {
  .palm--one-whole {
    width: 100%; }
  .palm--nine-tenths {
    width: 90%; }
  .palm--two-thirds {
    width: 66%; }
  .palm--one-half {
    width: 50%; }
  .palm--one-third {
    width: 33%; }
  .palm--one-quarter {
    width: 25%; } }
.overflow-x-hidden {
  overflow-x: hidden; }

@media only screen and (min-width: 1024px) {
  .desk-gutter--3-by-3 > *:nth-child(3n + 1) {
    padding-right: 10px; }
  .desk-gutter--3-by-3 > *:nth-child(3n + 2) {
    padding-left: 10px;
    padding-right: 10px; }
  .desk-gutter--3-by-3 > *:nth-child(3n + 3) {
    padding-left: 10px; }
  .desk-gutter--3-by-3 > *:last-child {
    padding-right: 0; } }

body {
  font-family: "Roboto", Verdana, Arial, sans-serif;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

h1, h2, h3, h4, h5, h6,
.header {
  font-family: "Franklin Gothic Book", serif;
  letter-spacing: 2px; }

p {
  font-weight: 300; }
  p:last-of-type {
    margin-bottom: 0; }

ol {
  list-style: decimal;
  margin-left: 1em; }

a {
  color: currentColor;
  text-decoration: none; }
  a:hover, a:active {
    text-decoration: underline; }

.serif {
  font-family: "Franklin Gothic Book", serif;
  letter-spacing: 2px; }

.sans-serif {
  font-family: "Roboto", Verdana, Arial, sans-serif; }

.text--white {
  color: #FFF; }
.text--light-blue {
  color: #a2ccdd; }
.text--medium-blue {
  color: #69a7c2; }
.text--dark-blue {
  color: #467284; }
.text--black {
  color: #333; }
.text--smaller {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429; }
.text--normal {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333; }
.text--bigger {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

.indent {
  margin-left: 1.5em; }

.bold {
  font-weight: 700; }

.italic {
  font-style: italic; }

.center {
  text-align: center; }

.cursor--pointer {
  cursor: pointer; }

.white-space--nowrap {
  white-space: nowrap; }

.cta {
  -webkit-appearance: none;
  background: transparent;
  display: inline-block;
  border: 1px solid #467284;
  padding: 10px 20px;
  cursor: pointer;
  transition: all .25s ease; }
  .cta:hover {
    text-decoration: none; }
  .cta:hover, .cta.active {
    background: #467284;
    color: #FFF; }
  .cta.red {
    border-color: #b82b2b;
    color: #b82b2b; }
    .cta.red:hover {
      background: #b82b2b;
      color: #FFF; }
  .cta.disabled {
    border-color: #CCC;
    color: #CCC;
    cursor: not-allowed; }
    .cta.disabled:hover {
      background: transparent;
      color: #CCC; }

input[type="text"],
input[type="email"], textarea, select {
  background: transparent;
  border: 1px solid #69a7c2;
  border-radius: 0;
  margin-bottom: 1em;
  padding: 0 1em;
  width: 100%;
  font-family: "Roboto", Verdana, Arial, sans-serif;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
  transition: border .5s; }
  input[type="text"]:focus,
  input[type="email"]:focus, textarea:focus, select:focus {
    border-color: #467284;
    outline: none; }
  input[type="text"]:invalid,
  input[type="email"]:invalid, textarea:invalid, select:invalid {
    box-shadow: none; }
  input[type="text"]:disabled,
  input[type="email"]:disabled, textarea:disabled, select:disabled {
    border-color: #CCC; }

.form--error {
  background: #cc0000;
  padding: 1em;
  color: #FFF; }

input[type="text"],
input[type="email"] {
  height: 3rem; }
  form.editted input[type="text"]:not(:focus):invalid, form.submitted input[type="text"]:not(:focus):invalid, form.editted
  input[type="email"]:not(:focus):invalid, form.submitted
  input[type="email"]:not(:focus):invalid {
    border-color: #cc0000; }

textarea {
  height: 9rem;
  resize: none; }
  textarea:not(:empty):invalid {
    border-color: #cc0000; }

/*
* @CSS3 Metro Dropdown
* @author Martin Ivanov
* @website http://wemakesitesnet
* @blog http://acidmartin.wordpress.com
* @twitter https://twitter.com/#!/wemakesitesnet
**/
.css3-metro-dropdown option,
.css3-metro-dropdown:after,
.css3-metro-dropdown::after,
.css3-metro-dropdown select {
  color: #fff; }

.css3-metro-dropdown select,
.css3-metro-dropdown:after,
.css3-metro-dropdown::after {
  display: block; }

.css3-metro-dropdown {
  position: relative;
  display: inline-block;
  border: 0;
  width: 100%; }

.css3-metro-dropdown:after {
  background: #EEE;
  position: absolute;
  display: table-cell;
  padding: 0;
  top: 1px;
  right: 0;
  border-right: 1px solid #69a7c2;
  content: "\f078";
  width: 3em;
  font-family: FontAwesome;
  color: #CCC;
  font-size: 1em;
  line-height: calc(22px + 1em);
  text-align: center;
  text-rendering: auto;
  -webkit-pointer-events: none;
  -moz-pointer-events: none;
  pointer-events: none; }

.css3-metro-dropdown:active:after,
.css3-metro-dropdown:focus:after,
.css3-metro-dropdown:hover:after {
  border-color: #467284;
  color: #a2ccdd; }

.css3-metro-dropdown select {
  padding: 0 .75rem;
  vertical-align: middle;
  outline: 0 none;
  cursor: pointer;
  color: #333;
  height: calc(24px + 1em);
  width: 100%;
  font-size: 1em; }

.css3-metro-dropdown option {
  padding: .5em;
  background: #fff;
  color: #333; }
  .css3-metro-dropdown option:disabled {
    color: #AAA; }

caption {
  text-align: left; }

@media only screen and (max-width: 1023px) {
  th:not(:first-child):not(:nth-child(2)):not(:nth-child(3)), td:not(:first-child):not(:nth-child(2)):not(:nth-child(3)) {
    display: none; } }
thead {
  border-bottom: 2px solid #333; }

tbody {
  border-bottom: 2px solid #333; }
  tbody tr {
    border-bottom: 1px solid #CCC;
    transition: all .25s ease; }
    tbody tr:hover, tbody tr.selected {
      background-color: #EEE; }

th {
  font-weight: bold;
  text-align: left;
  white-space: nowrap; }

.modal {
  position: fixed;
  background: rgba(204, 204, 204, 0.8);
  z-index: 1000;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw; }
  .modal__content {
    background: #FFF; }

.flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row nowrap;
  -moz-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-align-content: stretch;
  -moz-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  height: 100%;
  width: 100%; }
  .flex.align-content--top {
    -webkit-align-content: flex-start;
    -moz-align-content: flex-start;
    -ms-flex-line-pack: start;
    align-content: flex-start; }
  .flex.justify-content--flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    -moz-justify-content: flex-start;
    justify-content: flex-start; }
  .flex.justify-content--center {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center; }
  .flex.align-items--flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
    -webkit-align-items: flex-start;
    -moz-align-items: flex-start;
    align-items: flex-start; }
  .flex.align-items--stretch {
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    -webkit-align-items: stretch;
    -moz-align-items: stretch;
    align-items: stretch; }
  .flex.align-items--flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
    -webkit-align-items: flex-end;
    -moz-align-items: flex-end;
    align-items: flex-end; }
  .flex:not(.vertical) > * {
    margin-right: 20px; }
    .flex:not(.vertical) > *:last-child {
      margin-right: 0; }
  .flex.no-gutter > * {
    margin-right: 0; }
  .flex.wrap {
    -webkit-flex-wrap: wrap;
    -moz-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .flex.wrap > * {
      margin-right: 0; }
  .flex.vertical {
    -webkit-flex-flow: column nowrap;
    -moz-flex-flow: column nowrap;
    -ms-flex-flow: column nowrap;
    flex-flow: column nowrap; }
    .flex.vertical.center {
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      -webkit-justify-content: center;
      -moz-justify-content: center;
      justify-content: center; }
  @media only screen and (max-width: 1023px) {
    .flex.portable--stack {
      -webkit-box-direction: normal;
      -webkit-box-orient: vertical;
      -webkit-flex-direction: column;
      -moz-flex-direction: column;
      -ms-flex-direction: column;
      flex-direction: column; }
      .flex.portable--stack.reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
        -webkit-flex-direction: column-reverse;
        -moz-flex-direction: column-reverse;
        -ms-flex-direction: column-reverse;
        flex-direction: column-reverse; }
      .flex.portable--stack > * {
        margin-right: 0; } }

.box--green {
  background: rgba(0, 204, 102, 0.2);
  border: 1px solid #00cc66; }
.box--red {
  background: rgba(184, 43, 43, 0.2);
  border: 1px solid #b82b2b; }
.box--dark-gray {
  background: rgba(170, 170, 170, 0.2);
  border: 1px solid #AAA; }

.overflow-x--scroll {
  width: 100%;
  overflow-x: scroll; }

.columns--3 {
  -webkit-columns: auto 3;
  /* Chrome, Safari, Opera */
  -moz-columns: auto 3;
  /* Firefox */
  columns: auto 3; }

.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.5s; }

.fade-enter,
.fade-leave-to {
  opacity: 0; }

.flip-list-move {
  transition: transform 1s; }

.rotate-45 {
  transform: rotate(45deg); }

@media only screen and (min-width: 1024px) {
  .desk--hide {
    display: none; } }
@media only screen and (max-width: 1023px) {
  .portable--hide {
    display: none; } }

/*# sourceMappingURL=styles.css.map */
